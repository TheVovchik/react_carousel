{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","allPositions","currentPosition","currentIndex","infinity","props","carousel","clickNext","newIndex","length","setState","clickPrev","this","images","step","frameSize","itemWidth","animationDuration","keyPoints","fullLength","stepLength","stopLength","i","push","pointIndex","window","setInterval","clearInterval","className","style","width","transform","transitionDuration","map","imageUrl","index","src","alt","type","onClick","Component","App","console","log","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9aff3a3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinity: boolean;\n};\n\ntype State = {\n  allPositions: number[];\n  currentPosition: number;\n  currentIndex: number;\n  infinity: boolean;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    allPositions: [],\n    currentPosition: 0,\n    currentIndex: 0,\n    infinity: this.props.infinity,\n  };\n\n  carousel = 0;\n\n  componentDidMount() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const keyPoints: number[] = [];\n    const fullLength = itemWidth * images.length;\n    const stepLength = itemWidth * step;\n    const windowSize = itemWidth * frameSize;\n    const stopLength = fullLength - windowSize;\n    const currentPosition = 0;\n\n    for (let i = currentPosition; i < fullLength; i += stepLength) {\n      if (i > stopLength) {\n        keyPoints.push(stopLength - stopLength * 2);\n        break;\n      }\n\n      keyPoints.push(i - i * 2);\n    }\n\n    this.setState({ allPositions: keyPoints });\n\n    let pointIndex = 0;\n\n    if (!this.state.infinity) {\n      this.carousel = window.setInterval(() => {\n        this.setState({ currentPosition: keyPoints[pointIndex] });\n        if (pointIndex !== keyPoints.length - 1) {\n          pointIndex += 1;\n        } else {\n          pointIndex = 0;\n        }\n\n        this.setState({ currentIndex: pointIndex });\n      }, animationDuration);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.infinity) {\n      window.clearInterval(this.carousel);\n    }\n  }\n\n  clickNext = () => {\n    const {\n      allPositions,\n      currentIndex,\n      infinity,\n    } = this.state;\n    let newIndex = currentIndex;\n\n    if (!infinity) {\n      this.setState({ infinity: true });\n    } else if (newIndex !== allPositions.length - 1) {\n      newIndex += 1;\n    } else {\n      newIndex = 0;\n    }\n\n    this.setState({\n      currentIndex: newIndex,\n      currentPosition: allPositions[newIndex],\n    });\n  };\n\n  clickPrev = () => {\n    const {\n      allPositions,\n      currentIndex,\n      infinity,\n    } = this.state;\n\n    if (!infinity) {\n      this.setState({ infinity: true });\n    }\n\n    let newIndex = currentIndex;\n\n    if (newIndex !== 0) {\n      newIndex -= 1;\n    } else {\n      newIndex = allPositions.length - 1;\n    }\n\n    this.setState({\n      currentIndex: newIndex,\n      currentPosition: allPositions[newIndex],\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const {\n      currentPosition,\n    } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${currentPosition}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((imageUrl, index) => (\n            <li\n              key={imageUrl}\n              className=\"Carousel__item\"\n            >\n              <img\n                src={imageUrl}\n                alt={`${index + 1}`}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={this.clickPrev}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={this.clickNext}\n        >\n          next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  componentDidMount() {\n    // eslint-disable-next-line no-console\n    console.log(1);\n\n    // document.addEventListener('contextmenu', this.stopClock);\n    // document.addEventListener('click', this.startClock);\n  }\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinity={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}